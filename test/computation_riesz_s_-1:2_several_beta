include("../src/PTRiesz.jl")

PATH_OUTPUT = "test/datas/computation_riesz_s_-0.5_several_beta"


# Number of chains 
n_chains = Threads.nthreads()
# Number of particles 
N = 10
# Number of bins
nbins = div(N, 2) * 10
# Value of s (here, s = 0)
ss = [-.1, -.3, -.5, -.7, -.9]
# Temperatures 
T = 1.
# Inverse temperatures 
β = 1/T 


# List of histograms for each temperatures
pchs = [RWM.PCHist(N, s, β, nbins) for s in ss]

# Number of samples in Metropolis-Hastings
n_samples = 10_000

# We populate the histogram by Metropolis-Hastings 
for j in eachindex(ss)
    s = ss[j]
    println("Building the Hamiltonian for s = $s")
    logp = build_riesz_hamiltonian(s, N)
    println("Computing for beta = $(β) and s = $s")
    pchs[j] = RWM.compute_pair_correlation(N, s, logp, β, n_samples, n_chains; nbins)
end

# Save the histograms 
RWM.save_histogram(pchs, PATH_OUTPUT, "histograms")